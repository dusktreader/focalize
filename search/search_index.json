{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Focalize","text":"<p>You can't depend on your eyes when your imagination is out of focus --Mark Twain</p> <p></p>"},{"location":"#overview","title":"Overview","text":"<p>Focalize provide context within logs for blocks of code that are encircled by a context manager. This helps contextualize log lines within deeply nested call chains or within complex operations where many logical steps are taken.</p>"},{"location":"#quickstart","title":"Quickstart","text":""},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.8 or greater</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>This will install the latest release of py-buzz from pypi via pip:</p> <pre><code>pip install py-buzz\n</code></pre>"},{"location":"#basic-usage","title":"Basic Usage","text":"<p>The <code>Focalize</code> class needs only to be installed on the loguru logger. All subsequent invocation of logging will use the <code>Focalize</code> format. This includes some coloration. This also makes the <code>focus()</code> context manager available on the logger instance.</p> <p>To install the formatter, simply call the <code>attach_focalize()</code> function with the arguments you would pass to any new <code>loguru</code> handler:</p> <pre><code>from focalize import install_focalize\nattach_focalize(sys.stderr, level=\"DEBUG\")\n</code></pre> <p>Note that this will remove any other installed handlers by default. If you do not wish to remove other handlers, pass the <code>remove_other_handlers=False</code> keyword argument.</p> <p>To designate that a part of your code should be indented with a <code>Focalize</code> indented block, use the <code>focus()</code> context manager that is added to the <code>logger</code>:</p> <pre><code>from time import sleep\nfrom loguru import logger\nwith logger.focus(\"demo loop\"):\nfor int i in range(5):\nlogger.info(f\"Executing step {i+1} of 5\")\nsleep(0.1)\n</code></pre> <p>The logging output from such a block will look like:</p> <pre><code>2023-08-17T15:44:03.595308-0700 |   INFO    | commenced demo loop\n2023-08-17T15:44:03.598173-0700 |   INFO    | |-Executing step 1 of 5\n2023-08-17T15:44:03.698453-0700 |   INFO    | |-Executing step 2 of 5\n2023-08-17T15:44:03.798922-0700 |   INFO    | |-Executing step 3 of 5\n2023-08-17T15:44:03.899576-0700 |   INFO    | |-Executing step 4 of 5\n2023-08-17T15:44:04.000146-0700 |   INFO    | |-Executing step 5 of 5\n2023-08-17T15:44:04.101024-0700 |   INFO    | completed demo loop (in 0.50 second)\n</code></pre>"},{"location":"#format-changes","title":"Format Changes","text":"<p>In order to keep the logging within the context blocks aligned, <code>Focalize</code> changes the default formatting used by <code>loguru</code>. In particular, the meta data for where the log lines are generated is put after the message instead of before it. Also, the location metadata is only included for lines using the <code>DEBUG</code> level.</p> <p>Additionally, <code>Focalize</code> logs all lines in the UTC timezone. This can be disabled by passing <code>local_timestamps</code> to the <code>__init__()</code> method or the <code>attach_focalize()</code> function.</p> <p>Default log format: <pre><code>2023-08-17 16:22:12.942 | INFO     | __main__:&lt;module&gt;:5 - info message\n2023-08-17 16:22:12.942 | DEBUG    | __main__:&lt;module&gt;:6 - debug message\n</code></pre></p> <p>Focalize log format: <pre><code>2023-08-17 11:22:12.944 UTC |   INFO    | info message\n2023-08-17 11:22:12.945 UTC |   DEBUG   | debug message  -&gt; (__main__:&lt;module&gt;:9)\n</code></pre></p>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#focalize.main","title":"focalize.main","text":""},{"location":"reference/#focalize.main.Focalize","title":"Focalize","text":""},{"location":"reference/#focalize.main.Focalize.focus","title":"focus","text":"<pre><code>focus(focus_label: str, context_level: str = 'INFO')\n</code></pre> <p>Provides a context manager so that focus may be activated for a block of code</p> <p>Parameters:</p> Name Type Description Default <code>focus_label</code> <code>str</code> <p>An optional level describing the process contained within               this context. This label will be printed at the beginning               and end of each focused block</p> required <code>label_log_levell</code> <p>The logging level at which to log the context lines               (if not specified, defaults to self.info)</p> required"},{"location":"reference/#focalize.main.attach_focalize","title":"attach_focalize","text":"<pre><code>attach_focalize(*logger_add_args, remove_other_handlers = True, local_timestamps = False, **logger_add_kwargs) -&gt; Focalize\n</code></pre> <p>Attach the Focalize handler to the loguru logger.</p> <p>Parameters:</p> Name Type Description Default <code>logger_add_args</code> <p>Arguments to pass along to <code>logger.add()</code></p> <code>()</code> <code>remove_other_handlers</code> <p>If True, other handlers will be removed from the loguru logger</p> <code>True</code> <code>local_timestamps</code> <p>If True, timestamps will be shown in the local timezone</p> <code>False</code> <code>logger_add_kwargs</code> <p>Keyword arguments to pass along to <code>logger.add()</code></p> <code>{}</code>"}]}